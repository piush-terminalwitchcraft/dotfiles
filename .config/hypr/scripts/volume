#!/usr/bin/env bash

## Script To Manage Speaker Volume For Archcraft (in Wayland).

iDIR="$HOME/.config/hypr/icon"

# Get Volume
get_volume() {
    volume=$(pactl list sinks | grep '^[[:space:]]Volume:' | head -n 1 | awk '{print $5}')
    echo "$volume"
}

# Get icons
get_icon() {
    vol="$(get_volume)"
    current="${vol%%%}"
    if [[ "$current" -eq "0" ]]; then
        icon="$iDIR/volume-mute.png"
    elif [[ ("$current" -ge "0") && ("$current" -le "30") ]]; then
        icon="$iDIR/volume-low.png"
    elif [[ ("$current" -ge "30") && ("$current" -le "60") ]]; then
        icon="$iDIR/volume-mid.png"
    elif [[ ("$current" -ge "60") && ("$current" -le "100") ]]; then
        icon="$iDIR/volume-high.png"
    fi
}

# Notify
notify_user() {
    notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "$icon" "Volume : $(get_volume)"
}

# Increase Volume
inc_volume() {
    pactl set-sink-volume @DEFAULT_SINK@ +5% && get_icon && notify_user
}

# Decrease Volume
dec_volume() {
    pactl set-sink-volume @DEFAULT_SINK@ -5% && get_icon && notify_user
}

# Toggle Mute
toggle_mute() {
    mute_status=$(pactl list sinks | grep '^[[:space:]]Mute:' | head -n 1 | awk '{print $2}')
    if [[ "$mute_status" == "yes" ]]; then
        pactl set-sink-mute @DEFAULT_SINK@ toggle && notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "$iDIR/volume-mute.png" "Mute"
    else
        pactl set-sink-mute @DEFAULT_SINK@ toggle && get_icon && notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "$icon" "Unmute"
    fi
}

# Execute accordingly
if [[ "$1" == "--get" ]]; then
    get_volume
elif [[ "$1" == "--inc" ]]; then
    inc_volume
elif [[ "$1" == "--dec" ]]; then
    dec_volume
elif [[ "$1" == "--toggle" ]]; then
    toggle_mute
else
    get_volume
fi

